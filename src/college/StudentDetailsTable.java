/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package college;

import static college.StaffSalaryManagement.colvalue;

import java.sql.*;
import java.sql.ResultSetMetaData;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author PRINCE
 */
public class StudentDetailsTable extends javax.swing.JFrame {

    private static void setRowSorter(TableRowSorter<DefaultTableModel> trs) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }


    String query = null;
    ResultSet rs = null;
    int rowcount = 0;
    public StudentDetailsTable() {
        initComponents();
        FillTable();
        txtsearch.requestFocus();
//        txtsearch.setText("Search by Keyword");
    }

    public void FillTable()
    {
        
    
        try
        {
            rs = null;
            query = "select USN,Branch,FirstName,MiddleName,LastName,DOB,Gender,Address,IssueDate,AllotmentDate,LastDateOfJoin,Semester,State,Country,MobileNumber,FatherName,FatherNumber,MotherName,MotherNumber from StudentAdmission";
            rs = DatabaseQuery.ExecuteQuery(query);
            ResultSetMetaData rsmd = rs.getMetaData();
            DefaultTableModel model = (DefaultTableModel)StudentsDetailsTable.getModel();
            
            int colCount = rsmd.getColumnCount();
            model.setColumnCount(0);
            // Setting the column of the table
            for (int i = 1; i <= colCount; i++)
            {
                model.addColumn(rsmd.getColumnName(i));
            }
            
            // Adding the row in the table
            model.setRowCount(0);
            Object[] row = new Object[colCount];
            while (rs.next())
            {
                for (int i = 1; i <= colCount; i++)
                {
                    row[i - 1] = rs.getString(rsmd.getColumnName(i));
                }
                model.addRow(row);
            }
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
    
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        StudentsDetailsTable = new javax.swing.JTable();
        btnexit = new javax.swing.JButton();
        txtsearch = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        StudentsDetailsTable.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        StudentsDetailsTable.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        StudentsDetailsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        StudentsDetailsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StudentsDetailsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(StudentsDetailsTable);

        btnexit.setText("Exit");
        btnexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnexitActionPerformed(evt);
            }
        });

        txtsearch.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(0, 0, 0)));
        txtsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtsearchKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 188, Short.MAX_VALUE)
                .addComponent(btnexit, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnexit)
                    .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnexitActionPerformed
        // TODO add your handling code here:
        System.exit(1);
    }//GEN-LAST:event_btnexitActionPerformed

    private void txtsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyReleased
        // TODO add your handling code here:
//        txtsearch.setText("Search by Keyword");
        try
        {
            DefaultTableModel  model = (DefaultTableModel)StudentsDetailsTable.getModel();
            String search = txtsearch.getText().trim();
            TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
            StudentsDetailsTable.setRowSorter(tr);
            tr.setRowFilter(RowFilter.regexFilter(search));
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
        finally
        {
            
        
        }

    }//GEN-LAST:event_txtsearchKeyReleased

    private void txtsearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyTyped
        
    }//GEN-LAST:event_txtsearchKeyTyped

    private void StudentsDetailsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StudentsDetailsTableMouseClicked
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel)StudentsDetailsTable.getModel();
        int rowNum = StudentsDetailsTable.getSelectedRow();
        colvalue = model.getValueAt(rowNum, 0).toString();
        query = null;
        rs = null;
        try
        {
            query = "select * from StudentAdmission where USN = '" + colvalue + "'";
            rs = DatabaseQuery.ExecuteQuery(query);
            if(rs.next())
            {
                    StudentAdmissionUG saug = new StudentAdmissionUG();
                    saug.setVisible(true);
                    String filldate;
                    saug.txtusn.setText(rs.getString("USN")); 
//                    saug.txtbra.setText(rs.getString("Branch"));
                    saug.cmbbra.setSelectedIndex(rs.getInt("Branch"));
                    saug.datefill.setDate(rs.getDate("FillDate"));
                    saug.fname.setText(rs.getString("FirstName"));
                    saug.mname.setText(rs.getString("MiddleName"));
                    saug.lname.setText(rs.getString("LastName"));
                    saug.dob.setDate(rs.getDate("DOB"));
                    saug.cmbgender.getSelectedItem();
                    saug.txtaddr.setText(rs.getString("LastName"));
                    saug.txtaadhar.setText("Aadhar");
                    saug.txtpan.setText("PAN");
                    saug.grpblood.setText("BloodGroup");
                    saug.alltdate.setDate(rs.getDate("AllotmentDate"));
                    saug.issue.setDate(rs.getDate("IssueDate"));
                    saug.ldoj.setDate(rs.getDate("LastDateOfJoin"));
                    saug.clgcode.setText(rs.getString("CollegeCode"));
                    saug.cmbsem.getSelectedItem();
                    saug.relegion.setText(rs.getString("Semester"));
                    saug.caste.setText(rs.getString("Caste"));
                    saug.state.setText(rs.getString("State"));
                    saug.city.setText(rs.getString("City"));
                    saug.pinc.setText(rs.getString("PinCode"));
                    saug.count.setText(rs.getString("Country"));
                    saug.mob.setText(rs.getString("MobileNumber"));
                    saug.amob.setText(rs.getString("AlternateNum"));
                    saug.sname10.setText(rs.getString("School_10"));
                    saug.marks10.setText(rs.getString("Marks_10"));
                    saug.roll10.setText(rs.getString("Roll_10"));
                    saug.ypass10.setDate(rs.getDate("PassYear_10"));
                    saug.state10.setText(rs.getString("State_10"));
                    saug.city10.setText(rs.getString("City_10"));
                    saug.sname12.setText(rs.getString("School_12"));
                    saug.marks12.setText(rs.getString("Marks_12"));
                    saug.roll12.setText(rs.getString("Roll_12"));
                    saug.ypass12.setDate(rs.getDate("PassYear_12"));
                    saug.state12.setText(rs.getString("State_12"));
                    saug.city12.setText(rs.getString("City_12"));
                    saug.ftname.setText(rs.getString("FatherName"));
                    saug.ftocc.setText(rs.getString("FatherOccupaton"));
                    saug.ftincome.setText(rs.getString("FatherIncome"));
                    saug.ftemail.setText(rs.getString("FatherEmail"));
                    saug.ftnum.setText(rs.getString("FatherNumber"));
                    saug.mtname.setText(rs.getString("MotherNumber"));
                    saug.mtocc.setText(rs.getString("MotherOccupation"));
                    saug.mtincome.setText(rs.getString("MotherIncome"));
                    saug.mtemail.setText(rs.getString("MotherEmail"));
                    saug.mtnum.setText(rs.getString("MotherNumber"));
                    
            }
            }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_StudentsDetailsTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws SQLException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentDetailsTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentDetailsTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentDetailsTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentDetailsTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        DatabaseQuery.GetConnection();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentDetailsTable().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable StudentsDetailsTable;
    private javax.swing.JButton btnexit;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtsearch;
    // End of variables declaration//GEN-END:variables
}
